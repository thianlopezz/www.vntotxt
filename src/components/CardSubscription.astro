---
interface Feature {
  description: string;
  included: boolean;
}

interface Props {
  title: string;
  price?: string;
  checkoutLink?: string;
  comingText?: string;
  subscribeText?: string;
  features: Feature[];
}

const {
  title,
  price,
  features,
  checkoutLink,
  comingText = "Coming soon",
  subscribeText = "Subscribe",
} = Astro.props;
---

<div class="card w-96 bg-base-100 shadow-lg h-full">
  <div class="card-body">
    <h3 class="card-title text-4xl font-bold mb-1">{title}</h3>
    {
      price ? (
        <h4 class="card-title text-4xl font-bold mb-1">
          ${price}
          <small class="text-lg">/month</small>
        </h4>
      ) : (
        <h4 class="text-2xl font-bold mb-1 text-gray-600">{comingText}</h4>
      )
    }
    <table class="table">
      <tbody>
        {
          features.map((item) => (
            <tr>
              <td set:html={item.description} />
              <th>
                <span class="text-3xl">
                  <i class={item.included ? "bx bx-check" : "bx bx-x"} />
                </span>
              </th>
            </tr>
          ))
        }
      </tbody>
    </table>
    {
      checkoutLink && (
        <div class="card-actions justify-center">
          {checkoutLink ? (
            <a
              class="btn btn-primary btn-block text-base-100"
              href={checkoutLink}
            >
              {subscribeText}
            </a>
          ) : (
            <button
              class="btn btn-primary btn-block text-base-100"
              disabled="disabled"
            >
              {subscribeText}
            </button>
          )}
        </div>
      )
    }
  </div>
</div>
